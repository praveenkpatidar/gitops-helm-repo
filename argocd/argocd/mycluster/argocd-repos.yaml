# Sharing Credentials. Read the docs
# https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#repository-credentials

# No Secrets in below so can be managed in Source Control
# TODO Review all repos and keep only which is needed.
apiVersion: v1
kind: Secret
metadata:
  name: repo1
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repository
stringData:
  type: git
  url: https://github.com/praveenkpatidar/repo1
  project: default
---
# No Secrets in below so can be managed in Source Control
apiVersion: v1
kind: Secret
metadata:
  name: gitops-in-a-box
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repository
stringData:
  type: git
  url: https://github.com/praveenkpatidar/gitops-in-a-box
  project: default
---
# This can be managed in external secret management e.g. SealedSecrets or External Secrets in Source Control
# Create this if the repos are no public.
apiVersion: v1
kind: Secret
metadata:
  name: github-secret
  namespace: argocd
  labels:
    argocd.argoproj.io/secret-type: repo-creds
data:
  # git
  type: <Base64 Incoded git>
  url: <Base64 incoded Github Base URL e.g. https://github.com/<ORG or Username>>
  username: <Base64 encoded GH Username>
  password: <Base64 encoded GH PAT Token with access to Read Repo>
  project: <Base64 encoded Project Name>
type: Opaque
---
# Maintain this for in-cluster
apiVersion: v1
stringData:
  config: |
    {
    "tlsClientConfig": {
      "insecure": false
      }
    }
  name: in-cluster
  server: https://kubernetes.default.svc
kind: Secret
metadata:
  annotations:
    aws-cluster-name: mycluster
    aws-region: us-west-2
    environment: dev
  labels:
    argocd.argoproj.io/secret-type: cluster
    aws-cluster-name: mycluster
    aws-region: us-west-2
    environment: dev
  name: in-cluster
  namespace: argocd
type: Opaque
---
